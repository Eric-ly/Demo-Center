<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
     http://www.springframework.org/schema/beans
     http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
     http://www.springframework.org/schema/cache
     http://www.springframework.org/schema/cache/spring-cache-4.2.xsd">

    <bean id="genericJackson2JsonRedisSerializer" class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>

    <bean id="jedisConnFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.server}"/>
        <property name="port" value="6379"/> 
        <property name="poolConfig" ref="poolConfig"/>
       <!--  <property name="password" value="${redis.pwd}"/> -->
        <!-- <property name="database" value="${redis.database}"/> -->
        <!-- <property name="timeout" value="${redis.timeout}"/> -->
        <property name="usePool" value="true"/>
    </bean>

    <!-- redis template definition -->
    <bean id="redisTemplate"
          class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
      <!--    <property name="valueSerializer" ref="genericJackson2JsonRedisSerializer"/>-->
      	<property name="valueSerializer">
      		 <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
      	 </property>
    	   <property name="hashKeySerializer">     
           	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>     
        	</property>   
        	<property name="hashValueSerializer">   
         	  <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>     
        	</property>
    
    </bean>

    <!-- turn on declarative caching -->
    <cache:annotation-driven proxy-target-class="true"/>

    <!-- declare Redis Cache Manager -->
     <bean id="cacheManager"
            class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg ref="redisTemplate"/>
       <!--  缓存10分钟 -->
        <property name="defaultExpiration" value="600" />
        <property name="expires" >
            <map >
                <entry key="orderPayment" value="7200" />
                <entry key="workOrder" value="7200" />
                <entry key="contentProviderToken" value="259200" />
                <entry key="woPayToken" value="259000" />
                <entry key="verifyCode" value="300" />
            </map>
        </property>
    </bean> 

    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="300" />
        <property name="maxWaitMillis" value="3000" />
        <property name="testOnBorrow" value="true" />
    </bean>

</beans>
